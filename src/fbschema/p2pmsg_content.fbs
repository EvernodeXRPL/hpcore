//IDL file for p2p message content schema.
include "common_schema.fbs";
namespace fbschema.p2pmsg;

table UserSubmittedMessage {
    content:[ubyte];
    signature:[ubyte];
}

table UserSubmittedMessageGroup {
    pubkey:[ubyte];
    messages:[UserSubmittedMessage];
}

union Message { NonUnl_Proposal_Message, Proposal_Message, Npl_Message, State_Request_Message, History_Request_Message, History_Response_Message } //message content type

table Content {
    message:Message;
}

table NonUnl_Proposal_Message {
    usermessages:[UserSubmittedMessageGroup];
}

table Proposal_Message { //Proposal type message schema
    stage:uint8;
    time:uint64;
    users:[ByteArray];
    hash_inputs:[ByteArray];     //stage > 0 inputs (hash of stage 0 inputs)
    hash_outputs:[ByteArray];    //stage > 0 outputs (hash of stage 0 outputs)
    prev_state_hash: [ubyte];
    curr_state_hash: [ubyte];
}

table Npl_Message { //NPL type message schema
    data:[ubyte];
}

table State_Request_Message { //State request message schema
    state_hash:[ByteArray];
}

table History_Request_Message { //Ledger History request type message schema
    minimum_lcl:[ubyte];
    required_lcl:[ubyte];
}

table History_Response_Message { //Ledger History request type message schema
    hist_ledgers:[HistoryLedgerPair];
}

table HistoryLedgerPair { //A key, value pair of byte[].
    seq_no:uint64;
    ledger:HistoryLedger;
}

table HistoryLedger {
   state:[ubyte];
   lcl:[ubyte];
   raw_ledger:[ubyte];
}

table StateDifference { //Represent state difference by tracking created,updated and deleted state files.
    created: [BytesKeyValuePair]; //list of { fn => hash }
    updated: [BytesKeyValuePair]; 
    deleted: [BytesKeyValuePair]; 
}


root_type Content; //root type for message content